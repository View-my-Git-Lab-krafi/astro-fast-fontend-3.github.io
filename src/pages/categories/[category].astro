---
import BlogPost from '../../components/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

interface Post {
  url: string;
  frontmatter: {
    title: string;
  };
}

interface CategoryParams {
  category: string;
}

interface CategoryProps {
  posts: Post[];
}

export async function getStaticPaths() {
  const allPosts: any[] = await Astro.glob('../posts/*.md'); // Adjust any[] with the correct type for allPosts

  const uniqueCategories: string[] = [
    ...new Set(allPosts.map((post) => post.frontmatter.category).filter(Boolean)),
  ];

  return uniqueCategories.map((category) => ({
    params: { category },
  }));
}

const { category } = Astro.params as CategoryParams;
const { posts } = Astro.props as CategoryProps;
---

<BaseLayout pageTitle={category}>
  <p>Posts in the {category} category</p>
  <ul>
    {posts && posts.length > 0 ? (
      posts.map((post) => (
        <BlogPost key={post.url} url={post.url} title={post.frontmatter.title} />
      ))
    ) : (
      <li>No posts found</li>
    )}
  </ul>
</BaseLayout>
