<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Theme Selector</title>
    <style>
        :root {
            --button-bg: #ffffff;
            --button-text: #000000;
        }
        .light {
            --button-bg: #e1e1e1;
            --button-text: #000000;
        }
        .dark {
            --button-bg: #333333;
            --button-text: #ffffff;
        }
        .dracula {
            --button-bg: #444c7e;
            --button-text: #f8f8f2;
        }
        .peachoff {
            --button-bg: #434659;
            --button-text: #485d0b;
        }
        button, .dropdown-content {
            cursor: pointer;
            border-radius: 10px;
            border: 0;
            padding: 5px 10px;
            transition: all 0.2s ease-in-out;
            margin: 0 5px;
            background-color: var(--button-bg);
            color: var(--button-text);
        }
        button:hover, .dropdown-content button:hover {
            transform: scale(0.9);
        }
        button:active, .dropdown-content button:active {
            transform: scale(1);
        }
        .dropdown {
            position: relative;
            display: inline-block;
        }
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: var(--button-bg);
            box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            overflow: hidden;
            z-index: 1;
        }
        .dropdown-content button {
            display: block;
            width: 100%;
            padding: 10px 20px;
            background: none;
            border: none;
            text-align: left;
            font-size: 16px;
            transition: background-color 0.2s ease-in-out;
        }
        .dropdown-content button:hover {
            background-color: var(--button-bg-hover);
        }
        .dropdown:hover .dropdown-content {
            display: block;
        }
        .sun {
            fill: transparent;
        }
        :global(.dark) .sun {
            fill: black;
        }
        :global(.dark) .moon {
            fill: transparent;
        }
    </style>
</head>
<body>
    <div class="dropdown">
        <button id="themeButton">Theme: Light</button>
        <div class="dropdown-content">
            <button aria-label="Toggle to Light Theme" data-theme="light">Light</button>
            <button aria-label="Toggle to Dark Theme" data-theme="dark">Dark</button>
            <button aria-label="Toggle to Dracula Theme" data-theme="dracula">Dracula</button>
            <button aria-label="Toggle to Peachoff Theme" data-theme="peachoff">Peachoff</button>
            <button aria-label="Toggle to PurpleGems Theme" data-theme="purplegems">Purplegems</button>
        </div>
    </div>

    <script>
        const THEME_CLASSES = {
            LIGHT: "light",
            DARK: "dark",
            DRACULA: "dracula",
            PEACHOFF: "peachoff",
            PURPLEGEMS: "purplegems"
        };
        const COLOUR_MODE = "COLOR_MODE"; // local storage key

        const themeButton = document.getElementById("themeButton");
        const dropdownButtons = document.querySelectorAll(".dropdown-content button");
        const rootEl = document.documentElement;

        // Add event listeners to each button in the dropdown
        dropdownButtons.forEach(button => {
            button.addEventListener('click', () => {
                const selectedTheme = button.getAttribute('data-theme')!;
                if (themeButton) {
                    rootEl.className = selectedTheme; // Change theme
                    themeButton.textContent = `Theme: ${button.textContent}`; // Update button text

                    // Save the current color mode to local storage
                    window.localStorage.setItem(COLOUR_MODE, selectedTheme);
                }
            });
        });

        // Load saved theme from local storage
        const savedTheme = window.localStorage.getItem(COLOUR_MODE);
        if (savedTheme && THEME_CLASSES[savedTheme.toUpperCase() as keyof typeof THEME_CLASSES]) {
            rootEl.className = savedTheme;
            if (themeButton) {
                themeButton.textContent = `Theme: ${savedTheme.charAt(0).toUpperCase() + savedTheme.slice(1)}`;
            }
        }
    </script>
</body>
</html>
